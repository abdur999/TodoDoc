
#Create. A file in macConfig will be the filename 
touch macConfig 

#ignore the local files
touch .gitignore

#Ignore all text files
*.txt

# Ignore Mac system files
.DS_store

What is the difference between 'git pull' and 'git fetch'?
git pull tries to automatically merge after fetching commits. It is context sensitive, so all pulled commits will be merged into your currently active branch.  git pull automatically merges the commits without letting you review them first. If you donâ€™t carefully manage your branches, you may run into frequent conflicts.
git fetch gathers any commits from the target branch that do not exist in the current branch and stores them in your local repository. However, it does not merge them with your current branch. This is particularly useful if you need to keep your repository up to date, but are working on something that might break if you update your files. To integrate the commits into your current branch, you must use git merge afterwards.


This is an example for a remote repository called origin and a branch called master tracking the remote branch origin/master:
git checkout master                                                  
git fetch                                        
git diff origin/master
git rebase origin master
